/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tradeMenus;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import positions.commonGui;
import positions.myUtils;

/**
 *
 * @author earlie87
 */
public class SplitSymbolFile extends javax.swing.JDialog {
    File currentFolder = new File(System.getProperty("user.dir") + "/src/supportFiles/");
    File[] listOfFiles = currentFolder.listFiles();
    int userSegmentSize = 0;
    List<String> symbolList = new ArrayList<String>();
    String userSelectedSymbolFile = "";
    IOTextFiles.ioWrTextFiles userWrTextFile;
    IOTextFiles.ioRdTextFiles userRdSymbolTextFile;
    int numOfSegments = 0;
    /**
     * Creates new form SplitSymbolFile
     */
    public SplitSymbolFile(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        addWindowListener(
                new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        setVisible(false);
                        dispose();
                    }
                });

        selectSymbolFileComboBox.removeAllItems();

        for (int i = 0; i < listOfFiles.length; i++) {
            if (listOfFiles[i].isFile() && listOfFiles[i].getName().endsWith("sym")) {
                System.out.println("File " + listOfFiles[i].getName());
                selectSymbolFileComboBox.addItem(listOfFiles[i].getName());
            } else if (listOfFiles[i].isDirectory()) {
                System.out.println("Directory " + listOfFiles[i].getName());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        selectSymbolFileComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        segmentSizeTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTextArea = new javax.swing.JTextArea();
        splitFileButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        numberOfSegmentsTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fileSizeTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Split Symbol File"));

        jLabel1.setText("Select Symbol File:");

        selectSymbolFileComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selectSymbolFileComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectSymbolFileComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Segment Size:");

        segmentSizeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                segmentSizeTextFieldActionPerformed(evt);
            }
        });

        resultTextArea.setColumns(20);
        resultTextArea.setRows(5);
        jScrollPane1.setViewportView(resultTextArea);

        splitFileButton.setText("Split File");
        splitFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                splitFileButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("numOfSegments:");

        jLabel4.setText("FileSize:");

        fileSizeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSizeTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(splitFileButton)
                        .addGap(54, 54, 54)
                        .addComponent(exitButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(selectSymbolFileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(segmentSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(numberOfSegmentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fileSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectSymbolFileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(segmentSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfSegmentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(splitFileButton)
                    .addComponent(exitButton))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void segmentSizeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_segmentSizeTextFieldActionPerformed
        // TODO add your handling code here:
        userSegmentSize = Integer.valueOf(segmentSizeTextField.getText());
        int modx = 0;
        double numOfSegsDouble = 0.0;
        System.out.println("\nuserSegmentSize = " + userSegmentSize);
        if ((symbolList.size() > userSegmentSize) && (userSegmentSize > 0)) {
            //if some left over use another segment...
            numOfSegments = (symbolList.size() / userSegmentSize);
            modx = (symbolList.size() % userSegmentSize); 
            if (modx > 0){
                numOfSegments++;
            }
            //numOfSegments = ((modx > 0) ? numOfSegments++ : numOfSegments);            
            System.out.println("\nnumOfSegments: " + numOfSegments);
            numberOfSegmentsTextField.setText(Integer.toString(numOfSegments));
        } else if (userSegmentSize > 0) {
            System.out.println("\nsymbol list not > userSegSize!");
            resultTextArea.append("\nsymbol list not > userSegSize!");
        }
    }//GEN-LAST:event_segmentSizeTextFieldActionPerformed

    private void splitFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_splitFileButtonActionPerformed
        // TODO add your handling code here:   
        int idx = 0;
        int actSeg = 0;
        int wrCnt = 0;
        String segBaseName = "";
        String segSuffix = "";
        String actSegFullName = "";
        //split to name.ext..
        String[] userFileNameArray = userSelectedSymbolFile.split("\\.");
        segBaseName = userFileNameArray[0];
        segSuffix = userFileNameArray[1];
        IOTextFiles ioTextFile = new IOTextFiles();
        
        if ((userSegmentSize != 0) && (symbolList.size() > 0)) {
            if (symbolList.size() > userSegmentSize) {
                for (actSeg = 0, wrCnt = 0; actSeg < numOfSegments; actSeg++) {
                    //write out one segment, fiqure out name with segment number...
                    actSegFullName = (segBaseName + Integer.toString(actSeg) + "." + segSuffix);
                    userWrTextFile = ioTextFile.new ioWrTextFiles(actSegFullName, false);
                    for (idx = 0; ((idx < userSegmentSize) && (wrCnt < symbolList.size())); idx++) {
                        userWrTextFile.write(symbolList.get(wrCnt));
                        wrCnt++;
                    }
                    resultTextArea.append("\nWrote " + userSegmentSize + " to: " + actSegFullName);
                    userWrTextFile.closeWr();
                }                
                resultTextArea.append("\nDone. Wrote " + wrCnt + " symbols.");
            } else {
                System.out.println("\nsymbol list not > userSegSize!");
                resultTextArea.append("\nsymbol list not > userSegSize!");
            }           
        }else{
            commonGui.postInformationMsg("Invalid segmentSize or symbolList.");
        }
                
    }//GEN-LAST:event_splitFileButtonActionPerformed

    private void selectSymbolFileComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectSymbolFileComboBoxActionPerformed
        // TODO add your handling code here:
        int xIdx = 0;
        String strA = "";
        if(selectSymbolFileComboBox.getItemCount() > 0){
            userSelectedSymbolFile = selectSymbolFileComboBox.getSelectedItem().toString();
            IOTextFiles ioTextFile = new IOTextFiles();
            userRdSymbolTextFile = ioTextFile.new ioRdTextFiles(userSelectedSymbolFile, false);
            //read symbol file first.
            symbolList.removeAll(symbolList);
            for (xIdx = 0; ((strA = userRdSymbolTextFile.read(false)) != null); xIdx++) {
                symbolList.add(strA);
            }
            fileSizeTextField.setText(Integer.toString(symbolList.size()));
            if((symbolList.size() > userSegmentSize) && (userSegmentSize > 0)){
                numOfSegments = (symbolList.size() / userSegmentSize);
                System.out.println("\nnumOfSegments: " + numOfSegments);
                numberOfSegmentsTextField.setText(Integer.toString(numOfSegments));
            }else if(userSegmentSize > 0){                
                System.out.println("\nsymbol list not > userSegSize!");
                resultTextArea.append("\nsymbol list not > userSegSize!");
            }            
        }
        
    }//GEN-LAST:event_selectSymbolFileComboBoxActionPerformed

    private void fileSizeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSizeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileSizeTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SplitSymbolFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SplitSymbolFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SplitSymbolFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SplitSymbolFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SplitSymbolFile dialog = new SplitSymbolFile(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField fileSizeTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numberOfSegmentsTextField;
    private javax.swing.JTextArea resultTextArea;
    private javax.swing.JTextField segmentSizeTextField;
    private javax.swing.JComboBox selectSymbolFileComboBox;
    private javax.swing.JButton splitFileButton;
    // End of variables declaration//GEN-END:variables
}
