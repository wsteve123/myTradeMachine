/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tradeMenus;
import positions.commonGui;
import positions.TradeActivity;
import positions.TradeRequestList;
import positions.TradeRequestData;
import positions.myUtils;
/**
 *
 * @author earlie87
 */
public class TestTradesDialogForm extends javax.swing.JDialog {

    String userTicker = "";
    boolean userMarketTrade = true;
    boolean userSaidBuy = false;
    boolean userSaidSell = false;
    boolean userSaidDoIt = false;
    int userNumberOfShares = 1;
    TradeActivity actTradeActivity = null;
    TradeRequestList actTradeRequestList = null;
    TradeActivityDialogForm actTradeActivityDialogForm = null;
    String accountNumber = "DU218371";
    /**
     * Creates new form TestTradesDialogForm
     */
    public TestTradesDialogForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        actTradeRequestList = new TradeRequestList();
        actTradeActivity = new TradeActivity(actTradeRequestList);
        actTradeActivity.setTradeMode((
                                        (userMarketTrade == true) ? 
                                        TradeRequestData.TradeModes.oMarket : 
                                        TradeRequestData.TradeModes.oLimitAlgo)
        );
        actTradeActivity.setAccountNumber(accountNumber);
        //actTradeActivityDialogForm = new TradeActivityDialogForm(actTradeRequestList);
        //actTradeActivity.workOnThisTradeActivityTbl(actTradeActivityDialogForm);
        //actTradeActivityDialogForm.setModal(true);
        //actTradeActivityDialogForm.setVisible(true);
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TickerTestField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        BuyButton = new javax.swing.JButton();
        SellButton = new javax.swing.JButton();
        MarketCheckBox = new javax.swing.JCheckBox();
        ExitButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        sharesToTradeTextField = new javax.swing.JTextField();
        doItButton = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        TickerTestField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TickerTestFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter Ticker");

        BuyButton.setText("Buy");
        BuyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyButtonActionPerformed(evt);
            }
        });

        SellButton.setText("Sell");
        SellButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SellButtonActionPerformed(evt);
            }
        });

        MarketCheckBox.setSelected(true);
        MarketCheckBox.setText("Market");
        MarketCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarketCheckBoxActionPerformed(evt);
            }
        });

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("NumOfShares");

        sharesToTradeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sharesToTradeTextFieldActionPerformed(evt);
            }
        });

        doItButton.setText("Doit");
        doItButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doItButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TickerTestField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BuyButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel1)))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SellButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MarketCheckBox))
                    .addComponent(sharesToTradeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(doItButton)
                .addGap(46, 46, 46)
                .addComponent(ExitButton)
                .addGap(66, 66, 66))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TickerTestField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sharesToTradeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BuyButton)
                    .addComponent(SellButton)
                    .addComponent(MarketCheckBox))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doItButton)
                    .addComponent(ExitButton))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TickerTestFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TickerTestFieldActionPerformed
        // TODO add your handling code here:
        userTicker = TickerTestField.getText();
    }//GEN-LAST:event_TickerTestFieldActionPerformed

    private void MarketCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarketCheckBoxActionPerformed
        // TODO add your handling code here:
        userMarketTrade = MarketCheckBox.isSelected();
    }//GEN-LAST:event_MarketCheckBoxActionPerformed
    public void placeOrderNewOmit(String ticker, boolean buyit, int sharesToTrade, String tradeSpecifics) {
        //do either buy or sell based on buyit                        
        sharesToTrade = Math.abs(sharesToTrade);

        TradeRequestData trd = new TradeRequestData();
        trd.setTicker(ticker);
        if (buyit == true) {
            System.out.println("\nbuying " + sharesToTrade + " shares..of +" + ticker);
            trd.setOperation(TradeRequestData.TradeOptions.oOpBuy);
        } else {
            System.out.println("\nselling " + sharesToTrade + " shares..of " + ticker);
            trd.setOperation(TradeRequestData.TradeOptions.oOpSell);
        }
        trd.setOriginalSharesToTrade(sharesToTrade);
        trd.setTradeSpecifics(tradeSpecifics);
        actTradeRequestList.addOne(trd);
        actTradeRequestList.bumpReqCnt();
    }
    private void BuyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyButtonActionPerformed
        // TODO add your handling code here:
        userSaidBuy = true;
        userSaidSell = !userSaidBuy;
        if (!userTicker.isEmpty()) {
            if (commonGui.postConfirmationMsg("Buy: " + userNumberOfShares + " Shares of " + userTicker + ((userMarketTrade == true) ? " At Mrkt" : " Bid/Ask" )) == 0){
                //doIt!!
                System.out.println("\n Buying " + userTicker);
                userSaidDoIt = true;
                
            }else{
                System.out.println("\n Not Buying " + userTicker);
            }
        }else{
            System.out.println("\n Enter Ticker!");
            commonGui.postInformationMsg("Enter Ticker First!");
        }
    }//GEN-LAST:event_BuyButtonActionPerformed

    private void SellButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SellButtonActionPerformed
        // TODO add your handling code here:
        userSaidSell = true;
        userSaidBuy = !userSaidSell;
        if (!userTicker.isEmpty()) {
            if (commonGui.postConfirmationMsg("Sell: " + userNumberOfShares + " Shares of "+ userTicker + ((userMarketTrade == true) ? " At Mrkt" : " Bid/Ask" )) == 0){
                //doIt!!
                System.out.println("\n Selling " + userTicker);
                userSaidDoIt = true;
                //actTradeActivity.placeOrderNew(userTicker, !userSaidSell, userNumberOfShares, "");
            }else{
                System.out.println("\n Not Selling " + userTicker);
            }
        }else{
            System.out.println("\n Enter Ticker!");
            commonGui.postInformationMsg("Enter Ticker First!");
        }
    }//GEN-LAST:event_SellButtonActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // TODO add your handling code here:
        if(actTradeActivityDialogForm != null){
            actTradeActivityDialogForm.closeMeDown();
        }
        if(actTradeActivity != null){
            actTradeActivity.stopIt();
            myUtils.delay(200);
            if(actTradeActivity.haveWeStoppedRunning() == true){
                System.out.println("TradeActivity has stopped.");                
            }else{
                System.out.println("TradeActivity has NOT stopped.");
            }
            actTradeActivity = null;
        }                
        setVisible(false);
        dispose();
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void sharesToTradeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sharesToTradeTextFieldActionPerformed
        // TODO add your handling code here:
        userNumberOfShares = Integer.valueOf(sharesToTradeTextField.getText());
    }//GEN-LAST:event_sharesToTradeTextFieldActionPerformed

    private void doItButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doItButtonActionPerformed
        // TODO add your handling code here:
        //actTradeActivityDialogForm.setModal(true);
        actTradeActivity.placeOrderNew(userTicker, userSaidBuy, userNumberOfShares, ""); 
        System.out.println("\nwait for all filled.");
        while (!actTradeRequestList.areAllFilled()){
            myUtils.delay(100);
        }
        System.out.println("\nwe are all filled.");
    }//GEN-LAST:event_doItButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestTradesDialogForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestTradesDialogForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestTradesDialogForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestTradesDialogForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TestTradesDialogForm dialog = new TestTradesDialogForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuyButton;
    private javax.swing.JButton ExitButton;
    private javax.swing.JCheckBox MarketCheckBox;
    private javax.swing.JButton SellButton;
    private javax.swing.JTextField TickerTestField;
    private javax.swing.JButton doItButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField sharesToTradeTextField;
    // End of variables declaration//GEN-END:variables
}
