/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tradeMenus;
import ibTradeApi.ibApi;
import java.util.List;
import org.jfree.data.xy.*;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.*;
import positions.commonGui;

/**
 *
 * @author earlie87
 */
public class ChartItJDialog extends javax.swing.JDialog {

    XYSeries stockSeries;
    XYSeries rsiMaSeries;   
    XYDataset xyDatasetStock;
    XYDataset xyDatasetRsiMa;
    XYSeriesCollection dataset;
    JFreeChart chart;
    ChartFrame frame1;
    String actTicker = "";
    float actTick = 0;
    List<ibApi.historicalData.data> actHd = null;
    /**
     * Creates new form ChartItJDialog
     */
    public ChartItJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public void chartIt(String tickerIn, List<ibApi.historicalData.data> hdListIn){
        ChartItJDialog chartIt;
        XYSeries stockSeries;
        XYSeries rsiMaSeries;
        XYSeries rsiSeries;
        XYDataset xyDatasetStock;
        XYDataset xyDatasetRsiMa;
        XYSeriesCollection dataset;
        JFreeChart chart;
        ChartFrame frame1;
        String actTicker = "";
        float actTick = 0;
        double stockValue = 0.0;
        double rsiValue = 0.0;
        double rsiMa200Value = 0.0;
        int idx = 0;
        double curClose = 0.0;
        double curRsiMa = 0.0;
        double curRsi = 0.0;
        int hdsz = hdListIn.size();
        if(hdListIn.isEmpty()){
            return;
        }
        stockSeries = new XYSeries("Stock Chart");
        rsiSeries = new XYSeries("Rsi");
        rsiMaSeries = new XYSeries("Rsi Ma");
        dataset = new XYSeriesCollection();
        dataset.addSeries(stockSeries);
        dataset.addSeries(rsiSeries);
        dataset.addSeries(rsiMaSeries);
//      xyDatasetStock = new XYSeriesCollection(stockSeries);
//      xyDatasetOption = new XYSeriesCollection(optionSeries);

        chart = ChartFactory.createXYLineChart("Stock vs Rsi vs RsiMa", "Time(Days)", "Position Value", dataset, PlotOrientation.VERTICAL, true, true, false);
        frame1 = new ChartFrame(tickerIn + " Chart", chart, true);
        frame1.setVisible(true);
        frame1.setSize(900, 600);
        //cycle from oldest date to present..
        for (idx = (hdListIn.size() - 1); idx >= 0; idx--){
            curClose = hdListIn.get(idx).getClosePrice();
            curRsi = hdListIn.get(idx).getRsi();
            curRsiMa = hdListIn.get(idx).getRsiMa();            
            stockSeries.addOrUpdate(actTick, curClose);
            rsiMaSeries.addOrUpdate(actTick, curRsiMa);
            rsiSeries.addOrUpdate(actTick, curRsi);            
            actTick += 1;
        }
        
    }
    public void chartItNow(String ticker){
        double stockValue = 0.0;
        double rsiMaValue = 0.0;
        int idx = 0;
        stockSeries = new XYSeries("Stock Chart");
        rsiMaSeries = new XYSeries("Rsi MA");

        dataset = new XYSeriesCollection();
        dataset.addSeries(stockSeries);
        dataset.addSeries(rsiMaSeries);
       
            
//      xyDatasetStock = new XYSeriesCollection(stockSeries);
//      xyDatasetOption = new XYSeriesCollection(optionSeries);
        
        chart = ChartFactory.createXYLineChart("Stock vs RsiMa", "Time(secs)", "Position Value", dataset, PlotOrientation.VERTICAL, true, true, false);
        frame1 = new ChartFrame(ticker + " Chart", chart);
        frame1.setVisible(true);
        frame1.setSize(300, 300);
        for(idx = 0; idx < 100; idx++){
            stockSeries.addOrUpdate(actTick, stockValue = idx);
            rsiMaSeries.addOrUpdate(actTick, rsiMaValue = stockValue / 2);
            actTick += 20.0;
        }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tickerComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        charitButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tickerComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "aapl", "t", "msft", "vz", "mmm" }));
        tickerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tickerComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Ticker List");

        charitButton.setText("ChartIt");
        charitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                charitButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tickerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(charitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addComponent(exitButton))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tickerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(charitButton)
                    .addComponent(exitButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tickerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tickerComboBoxActionPerformed
        // TODO add your handling code here:
        actTicker = (String)tickerComboBox.getSelectedItem();
    }//GEN-LAST:event_tickerComboBoxActionPerformed

    private void charitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_charitButtonActionPerformed
        // TODO add your handling code here:
        if (actTicker != ""){            
            chartItNow(actTicker);
        }else{
            commonGui.postInformationMsg("Select Ticker First!");
        }
    }//GEN-LAST:event_charitButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        setVisible(false);       
        dispose();
    }//GEN-LAST:event_exitButtonActionPerformed
    public void setActHistData(List<ibApi.historicalData.data> hdin){
        actHd = hdin;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChartItJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChartItJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChartItJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChartItJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChartItJDialog dialog = new ChartItJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton charitButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox tickerComboBox;
    // End of variables declaration//GEN-END:variables
}
