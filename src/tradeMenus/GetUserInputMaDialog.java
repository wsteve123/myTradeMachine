/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tradeMenus;

/**
 *
 * @author earlie87
 */
public class GetUserInputMaDialog extends javax.swing.JDialog {

	int countValue = 0;
	double percentValue = 0.0;
	String selectedMa = "";
	String selectedMaType;
	int selectedMaIndex = 0;
	String[] supportedMa;
	private boolean currentPriceWithInPercentSelected = true;
	private boolean consecutiveTimesAboveSelected = false;
	private boolean consecutiveTimesBelowSelected = false;
	/**
	 * Creates new form getUserInputMaDialog
	 */
	public GetUserInputMaDialog(java.awt.Frame parent, boolean modal) {			
		super(parent, modal);
		initComponents();
		maComboBox.removeAllItems();
		//selectedMaType = (String) this.maTypeComboBox.getSelectedItem();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        movingAvePanel = new javax.swing.JPanel();
        currentPriceWithinPercentRadioButton = new javax.swing.JRadioButton();
        consecutiveTimesAboveRadioButton = new javax.swing.JRadioButton();
        enterLabel = new javax.swing.JLabel();
        enterTextField = new javax.swing.JTextField();
        doneButton = new javax.swing.JButton();
        maComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        consecutiveTimesBelowRadioButton1 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        maTypeComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        movingAvePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Moving Average Input\n"));

        buttonGroup1.add(currentPriceWithinPercentRadioButton);
        currentPriceWithinPercentRadioButton.setSelected(true);
        currentPriceWithinPercentRadioButton.setText("CurrentPriceWithinPercent");
        currentPriceWithinPercentRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentPriceWithinPercentRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(consecutiveTimesAboveRadioButton);
        consecutiveTimesAboveRadioButton.setText("ConsecutiveTimesAbove");
        consecutiveTimesAboveRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consecutiveTimesAboveRadioButtonActionPerformed(evt);
            }
        });

        enterLabel.setText("Enter %:");

        enterTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterTextFieldActionPerformed(evt);
            }
        });

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        maComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        maComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("SelMa:");

        buttonGroup1.add(consecutiveTimesBelowRadioButton1);
        consecutiveTimesBelowRadioButton1.setText("ConsecutiveTimesBelow");
        consecutiveTimesBelowRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consecutiveTimesBelowRadioButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("SelMaType:");

        maTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Simple", "Weighted", "Hull" }));
        maTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maTypeComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout movingAvePanelLayout = new javax.swing.GroupLayout(movingAvePanel);
        movingAvePanel.setLayout(movingAvePanelLayout);
        movingAvePanelLayout.setHorizontalGroup(
            movingAvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movingAvePanelLayout.createSequentialGroup()
                .addGroup(movingAvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(movingAvePanelLayout.createSequentialGroup()
                        .addGroup(movingAvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(movingAvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, movingAvePanelLayout.createSequentialGroup()
                                    .addGap(15, 15, 15)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, movingAvePanelLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(currentPriceWithinPercentRadioButton)))
                            .addGroup(movingAvePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(movingAvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(consecutiveTimesBelowRadioButton1)
                                    .addGroup(movingAvePanelLayout.createSequentialGroup()
                                        .addComponent(maComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(maTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 51, Short.MAX_VALUE))
                    .addGroup(movingAvePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(movingAvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(consecutiveTimesAboveRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(movingAvePanelLayout.createSequentialGroup()
                                .addGroup(movingAvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(enterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(movingAvePanelLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(doneButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        movingAvePanelLayout.setVerticalGroup(
            movingAvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movingAvePanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(movingAvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(movingAvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(currentPriceWithinPercentRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(consecutiveTimesAboveRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(consecutiveTimesBelowRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enterLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(doneButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(movingAvePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(movingAvePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void consecutiveTimesAboveRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consecutiveTimesAboveRadioButtonActionPerformed
        // TODO add your handling code here:
		enterLabel.setText("Enter Count:");
		consecutiveTimesAboveSelected = true;
		currentPriceWithInPercentSelected = false;
		consecutiveTimesBelowSelected = false;
    }//GEN-LAST:event_consecutiveTimesAboveRadioButtonActionPerformed

    private void currentPriceWithinPercentRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentPriceWithinPercentRadioButtonActionPerformed
        // TODO add your handling code here:
		enterLabel.setText("Enter %:");
		currentPriceWithInPercentSelected = true;
		consecutiveTimesAboveSelected = false;
		consecutiveTimesBelowSelected = false;
    }//GEN-LAST:event_currentPriceWithinPercentRadioButtonActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        // TODO add your handling code here:
		setVisible(false);
        dispose();
    }//GEN-LAST:event_doneButtonActionPerformed

    private void enterTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterTextFieldActionPerformed
        // TODO add your handling code here:
		if (currentPriceWithinPercentRadioButton.isSelected() == true){
			percentValue = Double.parseDouble(enterTextField.getText());
			System.out.println("\n%value enterred: "+ percentValue );
		}else{
			countValue = Integer.valueOf(enterTextField.getText());
			System.out.println("\ncount value enterred: "+ countValue );
		}
		
    }//GEN-LAST:event_enterTextFieldActionPerformed

    private void maComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maComboBoxActionPerformed
        // TODO add your handling code here:
		if(maComboBox.getItemCount() > 0){
			selectedMa = maComboBox.getSelectedItem().toString();
			selectedMaIndex = maComboBox.getSelectedIndex();
		}
    }//GEN-LAST:event_maComboBoxActionPerformed

    private void consecutiveTimesBelowRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consecutiveTimesBelowRadioButton1ActionPerformed
        // TODO add your handling code here:		
		enterLabel.setText("Enter Count:");
		consecutiveTimesBelowSelected = true;
		currentPriceWithInPercentSelected = false;
		consecutiveTimesAboveSelected = false;
    }//GEN-LAST:event_consecutiveTimesBelowRadioButton1ActionPerformed

    private void maTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maTypeComboBoxActionPerformed
        // TODO add your handling code here:
		selectedMaType = (String) maTypeComboBox.getSelectedItem();
    }//GEN-LAST:event_maTypeComboBoxActionPerformed

	public int getCountValue(){
		return countValue;
	}
	public double getPercentValue(){
		return percentValue;
	}
	public void setCountValue(int valin){
		countValue = valin;
	}
	public void setPercentValue(double valin){
		percentValue = valin;
	}
	public void setSupportedMa(String[] main){
		supportedMa = main;
		for(int x = 0; x < supportedMa.length; x++){
			maComboBox.addItem(supportedMa[x]);
		}
	}
	public String getSelectedMa(){
		return selectedMa;
	}
	public int getSelectedMaIndex(){
		return selectedMaIndex;
	}
	public boolean getCurrentPriceWithinPercentSelected(){
		return currentPriceWithInPercentSelected;
	}
	public boolean getConsecutiveTimesAboveSelected(){
		return consecutiveTimesAboveSelected;
	}
	public boolean getConsecutiveTimesBelowSelected(){
		return consecutiveTimesBelowSelected;
	}
	public String getSelectedMaType(){
		return selectedMaType;
	}
	public void setSelectedMaType(String tin){
		 selectedMaType = tin;
		return;
	}
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(GetUserInputMaDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(GetUserInputMaDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(GetUserInputMaDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(GetUserInputMaDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				GetUserInputMaDialog dialog = new GetUserInputMaDialog(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton consecutiveTimesAboveRadioButton;
    private javax.swing.JRadioButton consecutiveTimesBelowRadioButton1;
    private javax.swing.JRadioButton currentPriceWithinPercentRadioButton;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel enterLabel;
    private javax.swing.JTextField enterTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox<String> maComboBox;
    private javax.swing.JComboBox<String> maTypeComboBox;
    private javax.swing.JPanel movingAvePanel;
    // End of variables declaration//GEN-END:variables
}
