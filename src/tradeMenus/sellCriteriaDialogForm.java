/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tradeMenus;

import positions.commonGui;

/**
 *
 * @author earlie87
 */
public class sellCriteriaDialogForm extends javax.swing.JDialog {

    String userSelectedTicker = null;
    double userSelectedStopLossPercent = 0.0;
    double userSelectedLockGainPercent = 0.0;
    int userSelectedCriteriaInt = slopeDefs.oS_NONE;
    String userSelectedCriteriaStr = null;
    boolean userGoodness = false;
    boolean userSelectedAllTickers = false;
    boolean userSelectedLiquidateAll = false;
    boolean userSelectedSetStopLoss = false;
    boolean userSelectedSetLockGain = false;
            
    /**
     * Creates new form sellCriteriaDialogForm
     */
    public sellCriteriaDialogForm(java.awt.Frame parent, boolean modal) {
        
        super(parent, modal);        
        initComponents();

    }

    public void setCurrentStopLossPercent(double stopLossIn){
        userSelectedStopLossPercent = stopLossIn;
        stopLossLabel.setText(Double.toString(userSelectedStopLossPercent));
    }
    public void setCurrentLockGainPercent(double lockGainIn){
        userSelectedLockGainPercent = lockGainIn;
        lockGainLabel.setText(Double.toString(userSelectedLockGainPercent));
    }
    public void setCurrentStopLoss(boolean slin){
        userSelectedSetStopLoss = slin;
    }
    public void setCurrentLockGain(boolean lgin){
        userSelectedSetLockGain = lgin;
    }
    public void setLiquidateAll(boolean liqIn){
        userSelectedLiquidateAll = liqIn;
        liquidateAllCheckBox.setSelected(userSelectedLiquidateAll);
    }
    public void setAffectAllTickers(boolean allIn){
        userSelectedAllTickers = allIn;
        setAllTickersCheckBox.setSelected(userSelectedAllTickers);
    }
    public void setMaExit(String maExitIn){
        userSelectedCriteriaStr = maExitIn;
    }
    public void setActiveTicker(String tickerin){
        userSelectedTicker = tickerin;
        tickerLable.setText(userSelectedTicker);
    }
    public double getStopLossPercent(){
        return(userSelectedStopLossPercent);
    }
    public double getLockGainPercent(){
        return(userSelectedLockGainPercent);
    }
    public int getUserCriteriaInt(){
        return(userSelectedCriteriaInt);
    }
    public String getUserCriteriaStr(){
        return(userSelectedCriteriaStr);
    }
    public boolean getGoodInput(){
        return userGoodness;
    }
    public boolean getLiquidateAll(){
        return(userSelectedLiquidateAll);
    }   
    public boolean getSetAllTickers(){
        return userSelectedAllTickers;
    }
    public boolean isStopLossValid(){
        return userSelectedSetStopLoss;
    }
    public boolean isLockGainValid(){
        return userSelectedSetLockGain;
    }
    public String getTicker(){
        return userSelectedTicker;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tickerLable = new javax.swing.JLabel();
        criteriaComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        doneButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        stopLossLabel = new javax.swing.JLabel();
        lockGainLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        sellWhenLabel = new javax.swing.JLabel();
        setAllTickersCheckBox = new javax.swing.JCheckBox();
        liquidateAllCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Enter Sell Criteria");

        jLabel2.setText("For Ticker:");

        criteriaComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "StopLoss", "LockGain", "Hits10Day", "Hits50Day", "Hits100Day", "Hits200Day" }));
        criteriaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criteriaComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("SelectCriteria");

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("StopLoss:");

        jLabel5.setText("LockGain:");

        stopLossLabel.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                stopLossLabelAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel6.setText("SellWhen:");

        setAllTickersCheckBox.setText("SetAllTickers");
        setAllTickersCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setAllTickersCheckBoxActionPerformed(evt);
            }
        });

        liquidateAllCheckBox.setText("LiquidateAll");
        liquidateAllCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                liquidateAllCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lockGainLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sellWhenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stopLossLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cancelButton)
                                .addGap(82, 82, 82)
                                .addComponent(doneButton)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tickerLable, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(criteriaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(liquidateAllCheckBox)
                    .addComponent(setAllTickersCheckBox))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(liquidateAllCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tickerLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(setAllTickersCheckBox))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(criteriaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(stopLossLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lockGainLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(sellWhenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(doneButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void criteriaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criteriaComboBoxActionPerformed
        // TODO add your handling code here:
        boolean ok = false;
        double userIn = 0.0;
        boolean stopLossSet = false;
        boolean lockGainSet = false;
        userSelectedCriteriaInt = criteriaComboBox.getSelectedIndex();

        if ((userSelectedCriteriaInt == slopeDefs.oS_STOP_LOSS) || (userSelectedCriteriaInt == slopeDefs.oS_LOCK_GAIN)) {
            while (ok == false) {
                if (userSelectedCriteriaInt == slopeDefs.oS_STOP_LOSS) {
                    userSelectedStopLossPercent = userIn = Double.parseDouble(commonGui.getUserInput("StopLoss %", "3"));
                    stopLossSet = true;
                } else if (userSelectedCriteriaInt == slopeDefs.oS_LOCK_GAIN) {
                    userSelectedLockGainPercent = userIn = Double.parseDouble(commonGui.getUserInput("LockGain %", "10"));
                    lockGainSet = true;
                }
                ok = (commonGui.postConfirmationMsg(
                        "You Entered: " + userIn
                ) == 0);
            }
            if (ok == true){
                if (stopLossSet == true){
                    stopLossLabel.setText(Double.toString(userSelectedStopLossPercent));
                    userSelectedSetStopLoss = true;
                }else if (lockGainSet == true){
                    lockGainLabel.setText(Double.toString(userSelectedLockGainPercent));
                    userSelectedSetLockGain = true;
                }               
            }
        }else{
            sellWhenLabel.setText(criteriaComboBox.getSelectedItem().toString());
            userSelectedCriteriaStr = criteriaComboBox.getSelectedItem().toString();
        }
    }//GEN-LAST:event_criteriaComboBoxActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        userGoodness = false;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        // TODO add your handling code here:
        boolean ok = true;
        if(userSelectedAllTickers == true) {
            ok = (commonGui.postConfirmationMsg(
                        "You want ALL Tickers affected?"
                ) == 0);
            
        }
        if((userSelectedLiquidateAll == true) && (ok == true)) {
            ok = (commonGui.postConfirmationMsg(
                        "You want to Liquidate All Tickers?"
                ) == 0);
            
        }
        if (ok == true){
            userGoodness = true;
            setVisible(false);
            dispose();
        }else{
            commonGui.postInformationMsg("Done Aborted.");
            userGoodness = false;
        }
        
    }//GEN-LAST:event_doneButtonActionPerformed

    private void stopLossLabelAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_stopLossLabelAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_stopLossLabelAncestorAdded

    private void setAllTickersCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setAllTickersCheckBoxActionPerformed
        // TODO add your handling code here:
        
        userSelectedAllTickers = setAllTickersCheckBox.isSelected();       
        //setAllTickersCheckBox.setEnabled(userSelectedAllTickers);
    }//GEN-LAST:event_setAllTickersCheckBoxActionPerformed

    private void liquidateAllCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_liquidateAllCheckBoxActionPerformed
        // TODO add your handling code here:
        userSelectedLiquidateAll = liquidateAllCheckBox.isSelected();       
        //liquidateAllCheckBox.setEnabled(userSelectedLiquidateAll);
        
    }//GEN-LAST:event_liquidateAllCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sellCriteriaDialogForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sellCriteriaDialogForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sellCriteriaDialogForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sellCriteriaDialogForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                sellCriteriaDialogForm dialog = new sellCriteriaDialogForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox criteriaComboBox;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JCheckBox liquidateAllCheckBox;
    private javax.swing.JLabel lockGainLabel;
    private javax.swing.JLabel sellWhenLabel;
    private javax.swing.JCheckBox setAllTickersCheckBox;
    private javax.swing.JLabel stopLossLabel;
    private javax.swing.JLabel tickerLable;
    // End of variables declaration//GEN-END:variables
}
